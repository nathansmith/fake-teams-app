{
  "compilerOptions": {
    // Allow importing `.ts` files without specifying the extension.
    "allowImportingTsExtensions": true,
    // Include `.js` files in compilation along with `.ts` files.
    "allowJs": true,
    // Allow `default` imports from modules with no `default` export.
    "allowSyntheticDefaultImports": true,
    // Base URL for module resolution.
    "baseUrl": ".",
    // Enable interoperability between CommonJS and ES modules.
    "esModuleInterop": true,
    // Enforce consistent casing in file names.
    "forceConsistentCasingInFileNames": true,
    // Include code inline for source maps.
    "inlineSources": true,
    // Ensure each file can be safely transpiled without relying on other files.
    "isolatedModules": true,
    // Preserve JSX syntax in output. Useful for processing by another transform step, like Babel.
    "jsx": "preserve",
    // Specify library to use for JSX creation when using `jsx` option.
    "jsxImportSource": "solid-js",
    // Include additional type definitions.
    "lib": ["ESNext", "DOM", "DOM.Iterable"],
    // Specify ECMAScript module syntax.
    "module": "ESNext",
    // Use module resolution strategy for bundler.
    "moduleResolution": "bundler",
    // Do not emit compiled JavaScript files.
    "noEmit": true,
    // Prevent fallback `case` in `switch` statements.
    "noFallthroughCasesInSwitch": true,
    // Report errors on unused local variables.
    "noUnusedLocals": true,
    // Report errors on unused function parameters.
    "noUnusedParameters": true,
    // Path mapping for module resolution.
    "paths": {
      "~/*": ["./src/*"]
    },
    // Allow importing `.json` files directly.
    "resolveJsonModule": true,
    // Skip type checking of declaration files.
    "skipLibCheck": true,
    // Generate source maps for debugging original TypeScript.
    "sourceMap": true,
    // Enable all type checking options.
    "strict": true,
    // Specify target version for compiled JavaScript.
    "target": "ES2022",
    // Include type definitions for Vite and Vitest.
    "types": ["vite-plugin-solid-svg/types-component-solid", "vite/client", "vitest/globals"],
    // Use ECMAScript `define` semantics for class fields.
    "useDefineForClassFields": true
  },
  // Exclude directories for compilation.
  "exclude": ["node_modules/*", "public/*", "build/*"],
  // Include directories for compilation.
  "include": ["scripts", "src"]
}
